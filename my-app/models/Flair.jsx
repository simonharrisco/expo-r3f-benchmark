/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 Flair.glb
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei/native";
import modelPath from "./Flair.glb";

export default function Flair(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(modelPath);
  const { actions } = useAnimations(animations, group);

  // make animations play
  useEffect(() => {
    for (const actionName in actions) {
      const action = actions[actionName];
      action.play();
    }

    // Optional: return a cleanup function to stop the animations when the component unmounts
    return () => {
      for (const actionName in actions) {
        const action = actions[actionName];
        action?.stop();
      }
    };
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <primitive object={nodes.mixamorigHips} />
      <skinnedMesh
        name="Beta_Surface"
        geometry={nodes.Beta_Surface.geometry}
        material={materials.Beta_HighLimbsGeoSG3}
        skeleton={nodes.Beta_Surface.skeleton}
        castShadow={true}
        receiveShadow={true}
      />
      <skinnedMesh
        name="Beta_Joints"
        geometry={nodes.Beta_Joints.geometry}
        material={materials.Beta_Joints_MAT1}
        skeleton={nodes.Beta_Joints.skeleton}
      />
    </group>
  );
}
